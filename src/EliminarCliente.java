
import PlaceHolder.PlaceHolder;
import java.applet.AudioClip;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jona
 */
public class EliminarCliente extends javax.swing.JFrame {

    /**
     * Creates new form EliminarCliente
     */
    public EliminarCliente() {
        initComponents();
       // Thread.sleep(2500);
       Texto_ID.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
        try {//ESTO TIENE QUE VER CON LA CLASE FONDOSQING PARA COLOCAR IMAGEN DE FONDO
            FondoSwing fondo = new FondoSwing(ImageIO.read(new File("BD/Fondo.jpg")));

            JPanel panel = (JPanel) this.getContentPane();
            panel.setBorder(fondo);
        } catch (IOException ex) {
            
        }

        diseño_Botones();//llama al metodo para que arregle todos los botones

       // this.setBounds(0, 0, 1080, 620); //modifico el ancho y alto por defecti si se minimiza

         this.setResizable(false); //para que no modifiquen el ancho y no se agrande
        this.setLocationRelativeTo(this); // para que este en el centro de la pantalla

        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/IRIS.png"));//le coloco el icono a la aplicacion

        this.setIconImage(icono);

        //this.setExtendedState(Inicio.MAXIMIZED_BOTH); // para que inicie ocupando toda la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Texto_ID = new javax.swing.JTextField();
        Boton_ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(278, 141));

        Texto_ID.setFont(new java.awt.Font("Tempus Sans ITC", 3, 25)); // NOI18N
        Texto_ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Texto_ID.setCaretColor(new java.awt.Color(255, 0, 204));
        Texto_ID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Texto_ID.setSelectionColor(new java.awt.Color(255, 51, 204));
        Texto_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Texto_IDActionPerformed(evt);
            }
        });

        Boton_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ok.png"))); // NOI18N
        Boton_ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_ok.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ok2.png"))); // NOI18N
        Boton_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Texto_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(Boton_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Texto_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boton_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Texto_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Texto_IDActionPerformed

    }//GEN-LAST:event_Texto_IDActionPerformed

    private void Boton_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_okActionPerformed
        boolean IDcliente_numero=true;
        try {

            long IDcliente = Long.parseLong(Texto_ID.getText());//vere si el id es un numero
        } catch (Exception e) {//si da error es que es un texto
            IDcliente_numero=false;
        }

        if("".equals(Texto_ID.getText())){
        
              AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>El campo esta vacio esta vacio ⊙﹏⊙</b>", "●︿●", JOptionPane.INFORMATION_MESSAGE, icon);
            Texto_ID.requestFocus();
        }
        
        else if(IDcliente_numero==false){//verifica si el IDcliente es solo un numero y no tiene letras
         AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>El ID del cliente  no puede tener letras ¯\\(o_o)/¯ </b>", "¯\\(o_o)/¯ ????????", JOptionPane.INFORMATION_MESSAGE, icon);
         Texto_ID.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
        }
        
        else{
    eliminarCliente();
    }
    }//GEN-LAST:event_Boton_okActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void diseño_Botones (){
   
        
        Boton_ok.setOpaque(false);
        Boton_ok.setContentAreaFilled(false);
        Boton_ok.setBorderPainted(false);
        
        PlaceHolder placeholder = new PlaceHolder("ID cliente a eliminar", Texto_ID);
    
    }
    
    public void eliminarCliente (){
    
        try {
            int contadorColumnas = 0;
            int contadorFilas = 1; //1 ya que la primera posicion del excel en el primer codigo es la celda 2
            boolean estado = true;
             boolean estado2 = true;
            boolean estado3 = true;
            int numeroFila_eliminada = 0;
             int numeroTotalColumnas = 0;
             int contadorCelda_de_la_fila = 0;
            ArrayList<String> lista_valores_fila_a_pasar = new ArrayList<String>();

            FileInputStream file = new FileInputStream(new File("Cuentas e inventario IRIS.xlsx"));

            XSSFWorkbook wb = new XSSFWorkbook(file);
            XSSFSheet sheet = wb.getSheetAt(3);//con q hoja empezaremos

            while (estado == true) {
                XSSFRow fila = sheet.getRow(contadorFilas);//numero de filas filas
                
                if (fila == null) { //si es nula queire decir que recorrio todo el excel hasta llegar a la ultima y no encontro el codigo
                    estado = false;
                    try {

                        file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se encontro el ID!!✘ ⊙△⊙</b> \n busca el ID del cliente en el excel y mira a ver(˘︹˘)", "uh! ⊙﹏⊙", JOptionPane.INFORMATION_MESSAGE, icon);
 Texto_ID.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(╥﹏╥)o", "uh! ⊙△⊙", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                }
                
                if(estado==false)//si el estado ya es falso termino el ciclo
                {
                break;
                }
                XSSFCell celda = fila.getCell(0); //voy verificando en cada fila la primera celda si el codigo se repite
                if (Texto_ID.getText().equals(celda.getStringCellValue())) { //si el codigo  es igual a la celda del excel...
                    //  fila = sheet.createRow(contadorFilas);// el contador sera la fila a escribir, al crear una fila toda se queda en blanco, si hay contenido se elimina
                    XSSFRow removingRow = sheet.getRow(contadorFilas);
                    sheet.removeRow(removingRow);//elimino toda la fila
                    numeroFila_eliminada = contadorFilas; //aqui mismo contadorFilas tiene el numero de la fila eliminada
                    contadorFilas++; //paso a la sgte fila ya que esta quedo vacia
                    //numero de filas
                    while (estado2 == true) { //aqui como al eliminar queda la fila vacia lo que hare es tomar la ultima fila y pasarla a esta fila
                        fila = sheet.getRow(contadorFilas);//lo vuelvo a declarar para q lo tome en cuenta y mire si el sgte es nulo
                        if (fila == null) { //si es nulo...
                            numeroTotalColumnas = contadorFilas;//tengo en cuenta el numero para manipular la hoja 2
                            contadorFilas--;//como es nulo lo paso a la fila anterior para que  coja esa fila y la pase a la eliminada
                            fila = sheet.getRow(contadorFilas);//como le reste una posicion lo reposiciono en la fila
                            while (estado3 == true) {//este while es para q vaya recorriendo la fila y tome sus valores
                                try {
                                    celda = fila.getCell(contadorCelda_de_la_fila);//contadorCelda_de_la_fila es para recorrer toda la fila, fila: -- , columna: |
                                } catch (Exception e) {
                                    lista_valores_fila_a_pasar.clear();//borro todo lo de la lista

                                    estado3 = false;
                                }

                                if (estado3 == true) {
                                    try {
                                        if (celda.getStringCellValue() != null) { //si es diferente de vacio
                                            lista_valores_fila_a_pasar.add(celda.getStringCellValue());// le agrego el valor a una lista
                                            contadorCelda_de_la_fila++;

                                        }
                                    } catch (Exception e) {//cuando sea nula dara un error asi que aprovecho y lo mando a un catch
                                        fila = sheet.createRow(numeroFila_eliminada);//creo nuevamente la fila que elimine para pasarle los valores de la ultima fila
                                        for (int i = 0; i <= lista_valores_fila_a_pasar.size() - 1; i++) {//el -1 por q me lo recorre una vez mas de lo q deberia
                                            //en el for a la fila eliminada le pasara todos los datos de la ultima fila

                                            fila = sheet.getRow(numeroFila_eliminada);
                                            celda = fila.createCell(i);//voy creando las filas
                                            celda.setCellValue(lista_valores_fila_a_pasar.get(i));//y digamos cree la fila 0 y en la 0 le escribo la posicion 0 de la lista

                                        }
                                        removingRow = sheet.getRow(contadorFilas); //elimino la ultima fila
                                        sheet.removeRow(removingRow);

                                        lista_valores_fila_a_pasar.clear();//borro todo lo de la lista
                                        estado3 = false;
                                    }
                                }
                            }

                            estado2 = false;

                        } else {
                            contadorFilas++;
                        }
                    }

                    estado = false;
                    try {//guardo el excel
                         file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
                          AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Realizado.wav"));
                    sonido.play();
                    Icon icon = new ImageIcon(getClass().getResource("/Imagenes/guardado.png")); //para poner icono al aviso
                    JOptionPane.showMessageDialog(null, "<html><b> Se elimino el cliente! :3</b>", "✔✔✔✔✔✔✔✔✔✔✔✔✔✔✔", JOptionPane.INFORMATION_MESSAGE, icon);
                   Texto_ID.setText("");
                         Texto_ID.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                          break;//para finalizar todo el cilo
                    } catch (Exception e) {
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                    sonido.play();
                    Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                    JOptionPane.showMessageDialog(null, "<html><b> Error al guardar el excel! ⊙△⊙</b>", "uh! ⊙﹏⊙", JOptionPane.INFORMATION_MESSAGE, icon);
 Texto_ID.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    }
                }
                
                contadorFilas++;
            }
        } catch (FileNotFoundException ex) {
         AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>No se a encontrado el excel!! lo moviste?</b>(ง ͠° ͟ل͜ ͡°)ง", "uh! ⊙﹏⊙", JOptionPane.INFORMATION_MESSAGE, icon);

        } catch (IOException ex) {
        AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Error desconocido ●︿●  vuelve a intentarlo!</b>", "uh! ⊙﹏⊙", JOptionPane.INFORMATION_MESSAGE, icon);
        }
    
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EliminarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EliminarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EliminarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EliminarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EliminarCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_ok;
    private javax.swing.JTextField Texto_ID;
    // End of variables declaration//GEN-END:variables
}
