
import PlaceHolder.PlaceHolder;
import java.applet.AudioClip;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jona
 */
public class Editar extends javax.swing.JFrame {

    /**
     * Creates new form Editar
     */
    public Editar() {
         initComponents();

        try {//ESTO TIENE QUE VER CON LA CLASE FONDOSQING PARA COLOCAR IMAGEN DE FONDO
            FondoSwing fondo = new FondoSwing(ImageIO.read(new File("BD/Fondo.jpg")));

            JPanel panel = (JPanel) this.getContentPane();
            panel.setBorder(fondo);
        } catch (IOException ex) {

        }

        dise√±o_Botones();

        //this.setBounds(0, 0, 1080, 620); //modifico el ancho y alto por defecti si se minimiza

         this.setResizable(false); //para que no modifiquen el ancho y no se agrande
        this.setLocationRelativeTo(this); // para que este en el centro de la pantalla

        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/IRIS.png"));//le coloco el icono a la aplicacion

        this.setIconImage(icono);

        //this.setExtendedState(Inicio.MAXIMIZED_BOTH); // para que inicie ocupando toda la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Texto_codigoProducto = new javax.swing.JTextField();
        Texto_editarNombre = new javax.swing.JTextField();
        Texto_agregarInventario = new javax.swing.JTextField();
        Texto_precioNuevo = new javax.swing.JTextField();
        Boton_ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(436, 341));

        Texto_codigoProducto.setFont(new java.awt.Font("Tempus Sans ITC", 3, 25)); // NOI18N
        Texto_codigoProducto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Texto_codigoProducto.setCaretColor(new java.awt.Color(255, 0, 204));
        Texto_codigoProducto.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Texto_codigoProducto.setSelectionColor(new java.awt.Color(255, 51, 204));
        Texto_codigoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Texto_codigoProductoActionPerformed(evt);
            }
        });

        Texto_editarNombre.setFont(new java.awt.Font("Tempus Sans ITC", 3, 25)); // NOI18N
        Texto_editarNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Texto_editarNombre.setCaretColor(new java.awt.Color(255, 0, 204));
        Texto_editarNombre.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Texto_editarNombre.setSelectionColor(new java.awt.Color(255, 51, 204));
        Texto_editarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Texto_editarNombreActionPerformed(evt);
            }
        });

        Texto_agregarInventario.setFont(new java.awt.Font("Tempus Sans ITC", 3, 25)); // NOI18N
        Texto_agregarInventario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Texto_agregarInventario.setCaretColor(new java.awt.Color(255, 0, 204));
        Texto_agregarInventario.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Texto_agregarInventario.setSelectionColor(new java.awt.Color(255, 51, 204));
        Texto_agregarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Texto_agregarInventarioActionPerformed(evt);
            }
        });

        Texto_precioNuevo.setFont(new java.awt.Font("Tempus Sans ITC", 3, 25)); // NOI18N
        Texto_precioNuevo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Texto_precioNuevo.setCaretColor(new java.awt.Color(255, 0, 204));
        Texto_precioNuevo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Texto_precioNuevo.setSelectionColor(new java.awt.Color(255, 51, 204));
        Texto_precioNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Texto_precioNuevoActionPerformed(evt);
            }
        });

        Boton_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ok.png"))); // NOI18N
        Boton_ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_ok.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ok2.png"))); // NOI18N
        Boton_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Texto_editarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Texto_agregarInventario, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Texto_precioNuevo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Texto_codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(Boton_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Texto_codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Texto_editarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Texto_precioNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Texto_agregarInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Boton_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Texto_codigoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Texto_codigoProductoActionPerformed

    }//GEN-LAST:event_Texto_codigoProductoActionPerformed

    private void Texto_editarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Texto_editarNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Texto_editarNombreActionPerformed

    private void Texto_agregarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Texto_agregarInventarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Texto_agregarInventarioActionPerformed

    private void Texto_precioNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Texto_precioNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Texto_precioNuevoActionPerformed

    private void Boton_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_okActionPerformed
//si todos los campos estan vacios...
boolean  PrecioOinvetarioEsNumero=true;
int precio =0;
 int inventario=0;
 
try {//vere si el precio e inventario  son numeros
           precio =  Integer.parseInt(Texto_precioNuevo.getText());
            inventario =  Integer.parseInt(Texto_agregarInventario.getText());
          
        } catch (Exception e) {//si da error alguno de los 2 no es un numero
            PrecioOinvetarioEsNumero=false;
        }
//si todo esta vacio...
        if("".equals(Texto_codigoProducto.getText()) && "".equals(Texto_editarNombre.getText()) && "".equals(Texto_precioNuevo.getText()) && "".equals(Texto_agregarInventario.getText()))
            
{
AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Pero todos los campos estan vacios¬Ø\\_(„ÉÑ)_/¬Ø</b>", "??¬Ø\\(o_o)/¬Ø??", JOptionPane.INFORMATION_MESSAGE, icon);
Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
}   
        
else if("".equals(Texto_codigoProducto.getText())){//si solo el codigo del producto esta vacio
AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>El codigo del producto esta vacio :c</b>", "‚úò ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
}
//si solo el codigo del producto esta lleno
else if(Texto_codigoProducto.getText()!=null && "".equals(Texto_editarNombre.getText()) && "".equals(Texto_precioNuevo.getText()) && "".equals(Texto_agregarInventario.getText())){
AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Los demas campos estan vacios... ¬Ø\\_(„ÉÑ)_/¬Ø</b>", "‚úò ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
}

//si el codigo del producto y editar nombre tienen texto es que solo quiere editar el nombre, asi que solo editare esto
else if(Texto_codigoProducto.getText()!=null && Texto_editarNombre.getText()!=null && "".equals(Texto_precioNuevo.getText()) && "".equals(Texto_agregarInventario.getText()) ){
editarNombre();
          
} 


//si el precio tiene valor pero el inventario no
else if( Texto_precioNuevo.getText()!=null  && "".equals(Texto_agregarInventario.getText())){

    AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Si vas a editar el precio en  inventario tambien debes poner un valor ¬Ø\\(o_o)/¬Ø</b>", "‚úò¬Ø\\(o_o)/¬Ø‚úò", JOptionPane.INFORMATION_MESSAGE, icon);
    Texto_agregarInventario.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
}
//si el inventario tiene valor pero el precio no
else if("".equals(Texto_precioNuevo.getText()) && Texto_agregarInventario.getText()!=null ){

     AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Si vas a editar el inventario en  precio tambien debes poner un valor ¬Ø\\(o_o)/¬Ø</b>", "‚úò¬Ø\\(o_o)/¬Ø‚úò", JOptionPane.INFORMATION_MESSAGE, icon);    
Texto_precioNuevo.requestFocus();
}

else if( PrecioOinvetarioEsNumero==false){//si el precio o inventario no es un numero
AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>En inventario y precio debe ir un numero  ¬Ø\\(o_o)/¬Ø</b>", "‚úò‚úò‚úò‚úò‚úò", JOptionPane.INFORMATION_MESSAGE, icon);
}
//como use precio e inventario para verificar si es int, ahora lo usare para saber si es negativo
else if(precio<0 || inventario<0){
AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>El precio o inventario no pueden ser negativos  ¬Ø\\(o_o)/¬Ø</b>", "‚úò¬Ø\\(o_o)/¬Ø‚úò", JOptionPane.INFORMATION_MESSAGE, icon);
}
//si llega a dijitar por ejemplo 025
else if(Texto_precioNuevo.getText().startsWith("0") ){
AudioClip sonido;
            sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Como el precio empezaran con un 0? ¬Ø\\(o_o)/¬Ø</b>", "‚úò¬Ø\\(o_o)/¬Ø‚úò", JOptionPane.INFORMATION_MESSAGE, icon);
}
//ahora si solo editar nombre esta vacio es que solo quiere modificar el precio de compra e inventario
else if(Texto_codigoProducto.getText()!=null && "".equals(Texto_editarNombre.getText()) && Texto_precioNuevo.getText()!=null  && Texto_agregarInventario.getText()!=null ){
        
editarInventarioYprecio();
}
   //si todos los campos estan llenos es que quiere editar todo     
else if(Texto_codigoProducto.getText()!=null && Texto_editarNombre.getText()!=null && Texto_precioNuevo.getText()!=null && Texto_agregarInventario.getText()!=null ){
editarTodo();//LO DIRIJO AL METODO
}
    }//GEN-LAST:event_Boton_okActionPerformed

    /**
     * @param args the command line arguments
     */
    
   public void  dise√±o_Botones(){
    
      
        
         Boton_ok.setOpaque(false);
        Boton_ok.setContentAreaFilled(false);
        Boton_ok.setBorderPainted(false);
        
    
           Texto_codigoProducto.requestFocus();//esto es para que me  seleccione el jtext y se pueda escribir sin tener que clickearlo
    
           
           PlaceHolder placeholder = new PlaceHolder("Codigo producto", Texto_codigoProducto);
            placeholder = new PlaceHolder("Editar nombre", Texto_editarNombre);
            placeholder = new PlaceHolder("Precio nuevo", Texto_precioNuevo);
            placeholder = new PlaceHolder("Agregar inventario", Texto_agregarInventario);
    }
   
   
   public void editarNombre(){
       try {
            int contadorFilas = 3; //3 ya que la primera posicion del excel a agregar es 3
            boolean estado = true;

            FileInputStream file = new FileInputStream(new File("Cuentas e inventario IRIS.xlsx"));

            XSSFWorkbook wb = new XSSFWorkbook(file);
            XSSFSheet sheet = wb.getSheetAt(0);//con q hoja empezaremos

            while (estado == true) {
                XSSFRow fila = sheet.getRow(contadorFilas);//numero de filas filas

                if (fila == null)//si la fila no es nula no entra y el contador de filas se incrementa, es decir mirara la sgte fila
                {
                estado = false;
                    try {

                        file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se encontro el codigo!!‚úò ‚äô‚ñ≥‚äô</b> \n busca el nombre del producto en el excel y veras el codigo(ÀòÔ∏πÀò)", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
 Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(‚ï•Ôπè‚ï•)o", "uh! ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                }
                
                 if(estado==false){
                     Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
           break;//si el estado es falso no lo dejare seguir
           
           }
                
                 XSSFCell celda = fila.getCell(0); //voy verificando en cada fila la primera celda si el codigo se repite
                if (Texto_codigoProducto.getText().equals(celda.getStringCellValue()) && estado==true) {
                    estado = false;
                       celda = fila.getCell(1); //como la encontro voy a la celda 2 que esta el nombre
                 celda.setCellValue(Texto_editarNombre.getText());// y le asigno el nuevo nombre

                 
                    try {
                         file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Realizado.wav"));
        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/guardado.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>Se edito el nombre con exito c: ‚úî</b> Ÿ©(‚Ä¢ÃÆÃÆÃÉ‚Ä¢ÃÉ)€∂", "‚úî‚úî‚úî‚úî‚úî‚úî‚úî", JOptionPane.INFORMATION_MESSAGE, icon);
                 Texto_codigoProducto.setText("");
                 Texto_editarNombre.setText("");
                         Texto_precioNuevo.setText("");
                         Texto_agregarInventario.setText("");
                          Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        
                         AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(‚ï•Ôπè‚ï•)o", "uh! ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                 
                    
                }
                else{
                contadorFilas++; //le sumo 1 para pasar a la siguiente fila
                }
                
            }
       } catch (FileNotFoundException ex) {
         AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>No se a encontrado el excel!! lo moviste?</b>(‡∏á Õ†¬∞ ÕüŸÑÕú Õ°¬∞)‡∏á", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);

        } catch (IOException ex) {
        AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Error desconocido ‚óèÔ∏ø‚óè  vuelve a intentarlo!</b>", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
        }
           
   }
   
   public void editarInventarioYprecio(){
   
       try {
           int alarmaPersonalizadaProducto=0;//para saber la alarma del producto y saber si cambiar de color la celda
           int precioCompraActual=0;
            int precioCompraNuevo=0;
           int inventarioActual=0;
                int inventarioNuevo=0;
                long formulaPromedioPonderado=0;//aplicare una formula
          
      
             int contadorFilas = 3; //3 ya que la primera posicion del excel a agregar es 3
            boolean estado = true;

            FileInputStream file = new FileInputStream(new File("Cuentas e inventario IRIS.xlsx"));

            XSSFWorkbook wb = new XSSFWorkbook(file);
            XSSFSheet sheet = wb.getSheetAt(0);//con q hoja empezaremos

            while (estado == true) {
                XSSFRow fila = sheet.getRow(contadorFilas);//numero de filas filas

                if (fila == null)//si la fila no es nula no entra y el contador de filas se incrementa, es decir mirara la sgte fila
                {
                estado = false;
                    try {

                        file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se encontro el codigo!!‚úò ‚äô‚ñ≥‚äô</b> \n busca el nombre del producto en el excel y veras el codigo(ÀòÔ∏πÀò)", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
 Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(‚ï•Ôπè‚ï•)o", "uh! ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                }
           if(estado==false){//si es falso el estado no lo dejo seguir
                Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
           break;
           }
            XSSFCell celda = fila.getCell(0); //voy verificando en cada fila la primera celda si el codigo se repite
                if (Texto_codigoProducto.getText().equals(celda.getStringCellValue()) && estado==true) {
                    estado = false;
                   precioCompraNuevo= Integer.parseInt(Texto_precioNuevo.getText());
              inventarioNuevo= Integer.parseInt(Texto_agregarInventario.getText());
               celda = fila.getCell(3);//ahora cogere el inventario actual que esta en la celda 4
                 inventarioActual=Integer.parseInt(celda.getStringCellValue());
                   celda = fila.getCell(2);//ahora cogere el precio de comproa actual que esta en la celda 3
                 precioCompraActual=Integer.parseInt(celda.getStringCellValue());
                 
                 //ahora aplico la la formula del promedio ponderado
                 formulaPromedioPonderado= (inventarioActual*precioCompraActual)+(precioCompraNuevo*inventarioNuevo);
                 formulaPromedioPonderado= formulaPromedioPonderado/(inventarioNuevo+inventarioActual);
                 celda = fila.getCell(2); //el promediodePrecioCompra esta en la celda 3
                 celda.setCellValue(Long.toString(formulaPromedioPonderado));// y se lo asigno al excel, lo convierto en string ya que sus casillas deben ir en string
                   celda = fila.getCell(3);//ahora sumare el nuevo inventario
                  inventarioNuevo=inventarioNuevo+inventarioActual;//como ya tengo el actual y el nuevo inventario que se agregara los sumo
                   celda.setCellValue(Integer.toString(inventarioNuevo));//lo paso a string y sumo el nuevo inventario
                
                    sheet = wb.getSheetAt(2);//voy a la hoja 3
            fila = sheet.getRow(contadorFilas);  
              celda = fila.getCell(2);//cojo la alarma personalizada del producto
           alarmaPersonalizadaProducto = Integer.parseInt(celda.getStringCellValue());// y se la asigno a la variable
           //vere el inventario ya es menor o igual a la alarma
             
           if(alarmaPersonalizadaProducto>= inventarioNuevo){//si la alarma es mayor o igual al inventario nuevo
         sheet = wb.getSheetAt(0);//me devuelvo a la hoja 1
            fila = sheet.getRow(contadorFilas);  //obtengo la posicion del producto
              celda = fila.getCell(3);//cojo la alarma personalizada del producto
         
          XSSFCellStyle style1 = wb.createCellStyle(); 
          style1.setFillForegroundColor(HSSFColor.RED.index);//y le pongo color rojo al inventario
          style1.setFillPattern(CellStyle.SOLID_FOREGROUND); 
                 celda.setCellStyle(style1);//y se lo asigno a la celda

           }
           
           else{//si no es que el inventario es mayor a la alarma asi que lo pongo a blanco
              
                    sheet = wb.getSheetAt(0);//me devuelvo a la hoja 1
            fila = sheet.getRow(contadorFilas);  //obtengo la posicion del producto
              celda = fila.getCell(3);//cojo la alarma personalizada del producto
           //esto es para que me elimine una celda especifica, eliminare la celda que esta en rojo y le reasigno el valor
               Row row = sheet.getRow(contadorFilas);//numero columna (abajo) 
                Cell celdaEliminar = row.getCell(3);//numero fila -> solo borrare lo de la celda 3
               row.removeCell(celdaEliminar);//la elimino
              
                celda = fila.createCell(3);//y en la posicion 2 el nombre

                    celda.setCellValue(Integer.toString(inventarioNuevo));
           }
                   
                   
                   try {
                         file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Realizado.wav"));
        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/guardado.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>Actualizado con exito c: ‚úî</b> Ÿ©(‚Ä¢ÃÆÃÆÃÉ‚Ä¢ÃÉ)€∂", "‚úî‚úî‚úî‚úî‚úî‚úî‚úî", JOptionPane.INFORMATION_MESSAGE, icon);
                 Texto_codigoProducto.setText("");
                 Texto_editarNombre.setText("");
                         Texto_precioNuevo.setText("");
                         Texto_agregarInventario.setText("");
                          Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        
                         AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(‚ï•Ôπè‚ï•)o", "uh! ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                 
                 
                }
                else{
                contadorFilas++; //le sumo uno para pasar a la siguiente fila
                }
            
            }
           
       } catch (FileNotFoundException ex) {
         AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>No se a encontrado el excel!! lo moviste?</b>(‡∏á Õ†¬∞ ÕüŸÑÕú Õ°¬∞)‡∏á", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);

        } catch (IOException ex) {
        AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Error desconocido ‚óèÔ∏ø‚óè  vuelve a intentarlo!</b>", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
        }
     
       
   }
   
   public void editarTodo(){
       
       
       try {
           int precioCompraActual=0;
            int precioCompraNuevo=0;
           int inventarioActual=0;
                int inventarioNuevo=0;
                long formulaPromedioPonderado=0;//aplicare una formula
          int alarmaPersonalizadaProducto=0;//cogere la alarma personalizada del producto
      
             int contadorFilas = 3; //3 ya que la primera posicion del excel a agregar es 3
            boolean estado = true;

            FileInputStream file = new FileInputStream(new File("Cuentas e inventario IRIS.xlsx"));

            XSSFWorkbook wb = new XSSFWorkbook(file);
            XSSFSheet sheet = wb.getSheetAt(0);//con q hoja empezaremos

            while (estado == true) {
                XSSFRow fila = sheet.getRow(contadorFilas);//numero de filas filas

                if (fila == null)//si la fila no es nula no entra y el contador de filas se incrementa, es decir mirara la sgte fila
                {
                estado = false;
                    try {

                        file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/advertencia.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se encontro el codigo!!‚úò ‚äô‚ñ≥‚äô</b> \n busca el nombre del producto en el excel y veras el codigo(ÀòÔ∏πÀò)", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
 Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(‚ï•Ôπè‚ï•)o", "uh! ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                }
            if(estado==false){
                 Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
           break;//si el estado es falso no lo dejare seguir
           }
            XSSFCell celda = fila.getCell(0); //voy verificando en cada fila la primera celda si el codigo se repite
                if (Texto_codigoProducto.getText().equals(celda.getStringCellValue()) && estado==true) {
                    estado = false;
                   precioCompraNuevo= Integer.parseInt(Texto_precioNuevo.getText());
              inventarioNuevo= Integer.parseInt(Texto_agregarInventario.getText());
               celda = fila.getCell(3);//ahora cogere el inventario actual que esta en la celda 4
                 inventarioActual=Integer.parseInt(celda.getStringCellValue());
                   celda = fila.getCell(2);//ahora cogere el precio de comproa actual que esta en la celda 3
                 precioCompraActual=Integer.parseInt(celda.getStringCellValue());
                 
                 //ahora aplico la la formula del promedio ponderado
                 formulaPromedioPonderado= (inventarioActual*precioCompraActual)+(precioCompraNuevo*inventarioNuevo);
                 formulaPromedioPonderado= formulaPromedioPonderado/(inventarioNuevo+inventarioActual);
                 celda = fila.getCell(2); //el promediodePrecioCompra esta en la celda 3
                 celda.setCellValue(Long.toString(formulaPromedioPonderado));// y se lo asigno al excel, lo convierto en string ya que sus casillas deben ir en string
                 
                 celda = fila.getCell(1);//ahora editare el nombre que esta en la fila 2 del excel
                 celda.setCellValue(Texto_editarNombre.getText());
                  celda = fila.getCell(3);//ahora sumare el nuevo inventario
                  inventarioNuevo=inventarioNuevo+inventarioActual;//como ya tengo el actual y el nuevo inventario que se agregara los sumo
                   celda.setCellValue(Integer.toString(inventarioNuevo));//lo paso a string y sumo el nuevo inventario
                   
                    sheet = wb.getSheetAt(2);//voy a la hoja 3
            fila = sheet.getRow(contadorFilas);  
              celda = fila.getCell(2);//cojo la alarma personalizada del producto
           alarmaPersonalizadaProducto = Integer.parseInt(celda.getStringCellValue());// y se la asigno a la variable
           //vere el inventario ya es menor o igual a la alarma
             
           if(alarmaPersonalizadaProducto>= inventarioNuevo){//si el inventario es menor o igual a la alarma
         sheet = wb.getSheetAt(0);//me devuelvo a la hoja 1
            fila = sheet.getRow(contadorFilas);  //obtengo la posicion del producto
              celda = fila.getCell(3);//cojo la alarma personalizada del producto
         
          XSSFCellStyle style1 = wb.createCellStyle(); 
          style1.setFillForegroundColor(HSSFColor.RED.index);//y le pongo color rojo al inventario
          style1.setFillPattern(CellStyle.SOLID_FOREGROUND); 
                 celda.setCellStyle(style1);//y se lo asigno a la celda

           }
           
           else{//si no es que el inventario es mayor a la alarma asi que lo pongo a blanco
                        sheet = wb.getSheetAt(0);//me devuelvo a la hoja 1
            fila = sheet.getRow(contadorFilas);  //obtengo la posicion del producto
              celda = fila.getCell(3);//cojo la alarma personalizada del producto
           //esto es para que me elimine una celda especifica, eliminare la celda que esta en rojo y le reasigno el valor
               Row row = sheet.getRow(contadorFilas);//numero columna (abajo) 
                Cell celdaEliminar = row.getCell(3);//numero fila -> solo borrare lo de la celda 3
               row.removeCell(celdaEliminar);//la elimino
              
                celda = fila.createCell(3);//y en la posicion 2 el nombre

                    celda.setCellValue(Integer.toString(inventarioNuevo));
           }
                   
                   
                   
                   try {
                         file.close();

                        FileOutputStream output = new FileOutputStream("Cuentas e inventario IRIS.xlsx"); //ruta donde se guardare el archivo
                        wb.write(output);
                        output.close();
AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Realizado.wav"));
        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/guardado.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>Actualizado con exito c: ‚úî</b> Ÿ©(‚Ä¢ÃÆÃÆÃÉ‚Ä¢ÃÉ)€∂", "‚úî‚úî‚úî‚úî‚úî‚úî‚úî", JOptionPane.INFORMATION_MESSAGE, icon);
                 Texto_codigoProducto.setText("");
                 Texto_editarNombre.setText("");
                         Texto_precioNuevo.setText("");
                         Texto_agregarInventario.setText("");
                          Texto_codigoProducto.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
                    } catch (Exception e) {
                        
                         AudioClip sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                        sonido.play();
                        Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
                        JOptionPane.showMessageDialog(null, "<html><b>No se pudo guardar el excel, vuelve a intentarlo</b> o(‚ï•Ôπè‚ï•)o", "uh! ‚äô‚ñ≥‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
                    }
                 
                 
                }
                else{
                contadorFilas++; //le sumo uno para pasar a la siguiente fila
                }
            
            }
           
       } catch (FileNotFoundException ex) {
         AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>No se a encontrado el excel!! lo moviste?</b>(‡∏á Õ†¬∞ ÕüŸÑÕú Õ°¬∞)‡∏á", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);

        } catch (IOException ex) {
        AudioClip  sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
        sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/error.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b>Error desconocido ‚óèÔ∏ø‚óè  vuelve a intentarlo!</b>", "uh! ‚äôÔπè‚äô", JOptionPane.INFORMATION_MESSAGE, icon);
        }
     
   
   }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_ok;
    private javax.swing.JTextField Texto_agregarInventario;
    private javax.swing.JTextField Texto_codigoProducto;
    private javax.swing.JTextField Texto_editarNombre;
    private javax.swing.JTextField Texto_precioNuevo;
    // End of variables declaration//GEN-END:variables
}
